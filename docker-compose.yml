version: '3.8'

services:
  web:
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./ops/environment/.default.env
      - ./ops/environment/.local.env
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - web_network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fastapi_shop
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U course_user -d course_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - web_network

  redis:
    image: redis:latest
    platform: linux/amd64
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - web_network

  redis-commander:
    image: rediscommander/redis-commander:latest
    platform: linux/amd64
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - web_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    environment:
      discovery.type: single-node
      xpack.security.enabled: 'false'
      ELASTIC_PASSWORD: fastshop
      ES_JAVA_OPTS: -Xms256m -Xmx256m
      cluster.routing.allocation.disk.threshold_enabled: false
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "-u", "elastic:fastshop", "http://localhost:9200"]
      interval: 5s
      retries: 10
    networks:
      - web_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - 5601:5601
    environment:
      SERVERNAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: fastshop
    healthcheck:
      test: [ "CMD-SHELL", "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'" ]
      interval: 5s
      retries: 10
    networks:
      - web_network

  zookeeper-0:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc 127.0.0.1 2181 || exit -1" ]
      interval: 5s
      retries: 10
    networks:
      - web_network

  kafka-0:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      zookeeper-0:
        condition: service_healthy
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-0:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka-0:9092,PLAINTEXT_EXTERNAL://kafka-0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:9092,PLAINTEXT_EXTERNAL://127.0.0.1:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "/bin/kafka-topics", "--bootstrap-server", "kafka-0:9092", "--list" ]
      interval: 5s
      retries: 10
    networks:
      - web_network

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    depends_on:
      kafka-0:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: Local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-0:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-0:2181
      SERVER_PORT: 8080
    ports:
      - "9080:8080"
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 5s
      retries: 10
    networks:
      - web_network

volumes:
  postgres_data:
  redis_data:

networks:
  web_network:
