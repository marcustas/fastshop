"""added_all_changes_from_HM_16

Revision ID: 74b1f609474f
Revises: cedcfebfb6ad
Create Date: 2023-12-13 18:26:40.800344

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '74b1f609474f'
down_revision: Union[str, None] = 'cedcfebfb6ad'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_email'), 'company', ['email'], unique=True)
    op.create_index(op.f('ix_company_id'), 'company', ['id'], unique=False)
    op.create_index(op.f('ix_company_phone_number'), 'company', ['phone_number'], unique=True)
    op.create_index(op.f('ix_company_username'), 'company', ['username'], unique=False)
    op.create_table('baskets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.Column('status', sa.Enum('Open', 'Closed', 'Cancelled', name='basket_status'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_baskets_id'), 'baskets', ['id'], unique=False)
    op.create_table('basket_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('basket_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.ForeignKeyConstraint(['basket_id'], ['baskets.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_basket_lines_id'), 'basket_lines', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('basket_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('total_price', sa.DECIMAL(), nullable=True),
    sa.Column('shipping_price', sa.DECIMAL(), nullable=True),
    sa.Column('shipping_method', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('Open', 'Paid', 'Sent', 'Received', 'Cancelled', 'Returned', name='order_status'), nullable=True),
    sa.Column('additional_info', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default='now', nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['user_addresses.id'], ),
    sa.ForeignKeyConstraint(['basket_id'], ['baskets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_table('order_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_lines_id'), 'order_lines', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_order_lines_id'), table_name='order_lines')
    op.drop_table('order_lines')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_basket_lines_id'), table_name='basket_lines')
    op.drop_table('basket_lines')
    op.drop_index(op.f('ix_baskets_id'), table_name='baskets')
    op.drop_table('baskets')
    op.drop_index(op.f('ix_company_username'), table_name='company')
    op.drop_index(op.f('ix_company_phone_number'), table_name='company')
    op.drop_index(op.f('ix_company_id'), table_name='company')
    op.drop_index(op.f('ix_company_email'), table_name='company')
    op.drop_table('company')
    # ### end Alembic commands ###
